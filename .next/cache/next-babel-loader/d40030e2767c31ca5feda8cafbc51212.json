{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/home/nazmul/WebProjects/coronaAPI-react/components/ConfirmedDetail.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from \"react\";\nexport default function ConfirmedDetail(_ref) {\n  var url = _ref.url;\n\n  var _useState = useState(),\n      stats = _useState[0],\n      setStats = _useState[1];\n\n  console.log(url);\n  useEffect(function () {\n    // console.log(\"Fetching Data\");\n    function fetchData() {\n      var data;\n      return _regeneratorRuntime.async(function fetchData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(fetch(url).then(function (res) {\n                console.log(res);\n                res.json();\n              }));\n\n            case 2:\n              data = _context.sent;\n              setStats(data);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    fetchData();\n  }, []); // console.log(stats);\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Confirmed\"), __jsx(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, __jsx(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, __jsx(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, __jsx(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Province\"), __jsx(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Confirmed\"), __jsx(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Recovered\"), __jsx(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Deaths\"), __jsx(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Active\"))), stats && stats.map(function (province, i) {\n    return __jsx(\"tbody\", {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, __jsx(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, __jsx(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, province.provinceState), __jsx(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, province.confirmed), __jsx(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, province.recovered), __jsx(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, province.deaths), __jsx(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, province.active)));\n  })));\n}","map":{"version":3,"sources":["/home/nazmul/WebProjects/coronaAPI-react/components/ConfirmedDetail.js"],"names":["useState","useEffect","ConfirmedDetail","url","stats","setStats","console","log","fetchData","fetch","then","res","json","data","map","province","i","provinceState","confirmed","recovered","deaths","active"],"mappings":";;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,eAAe,SAASC,eAAT,OAAkC;AAAA,MAAPC,GAAO,QAAPA,GAAO;;AAAA,kBACnBH,QAAQ,EADW;AAAA,MACtCI,KADsC;AAAA,MAC/BC,QAD+B;;AAE7CC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAZ;AAEAF,EAAAA,SAAS,CAAC,YAAM;AACZ;AACA,aAAeO,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACuBC,KAAK,CAACN,GAAD,CAAL,CAAWO,IAAX,CAAgB,UAAAC,GAAG,EAAI;AACtCL,gBAAAA,OAAO,CAACC,GAAR,CAAYI,GAAZ;AAEAA,gBAAAA,GAAG,CAACC,IAAJ;AACH,eAJkB,CADvB;;AAAA;AACUC,cAAAA,IADV;AAOIR,cAAAA,QAAQ,CAACQ,IAAD,CAAR;;AAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AASAL,IAAAA,SAAS;AACZ,GAZQ,EAYN,EAZM,CAAT,CAJ6C,CAkB7C;;AAEA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,CADJ,CADJ,EAUKJ,KAAK,IACFA,KAAK,CAACU,GAAN,CAAU,UAACC,QAAD,EAAWC,CAAX,EAAiB;AACvB,WACI;AAAO,MAAA,GAAG,EAAEA,CAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,QAAQ,CAACE,aAAd,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKF,QAAQ,CAACG,SAAd,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKH,QAAQ,CAACI,SAAd,CAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKJ,QAAQ,CAACK,MAAd,CAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKL,QAAQ,CAACM,MAAd,CALJ,CADJ,CADJ;AAWH,GAZD,CAXR,CAHJ,CADJ;AA+BH","sourcesContent":["import { useState, useEffect } from \"react\";\n\nexport default function ConfirmedDetail({ url }) {\n    const [stats, setStats] = useState();\n    console.log(url);\n\n    useEffect(() => {\n        // console.log(\"Fetching Data\");\n        async function fetchData() {\n            const data = await fetch(url).then(res => {\n                console.log(res);\n\n                res.json();\n            });\n\n            setStats(data);\n        }\n        fetchData();\n    }, []);\n\n    // console.log(stats);\n\n    return (\n        <div>\n            <h3>Confirmed</h3>\n\n            <table>\n                <thead>\n                    <tr>\n                        <td>Province</td>\n                        <td>Confirmed</td>\n                        <td>Recovered</td>\n                        <td>Deaths</td>\n                        <td>Active</td>\n                    </tr>\n                </thead>\n                {stats &&\n                    stats.map((province, i) => {\n                        return (\n                            <tbody key={i}>\n                                <tr>\n                                    <td>{province.provinceState}</td>\n                                    <td>{province.confirmed}</td>\n                                    <td>{province.recovered}</td>\n                                    <td>{province.deaths}</td>\n                                    <td>{province.active}</td>\n                                </tr>\n                            </tbody>\n                        );\n                    })}\n            </table>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}