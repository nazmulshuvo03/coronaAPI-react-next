{"ast":null,"code":"var _jsxFileName = \"/home/nazmul/WebProjects/coronaAPI-react/components/Stats.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState, useRef } from \"react\";\nimport useStats from \"../utils/useStats\";\nimport styled from \"styled-components\";\nimport * as d3 from \"d3\";\nconst StatGrid = styled.div`\n    display: grid;\n    grid-template-columns: repeat(3, 1fr);\n    grid-gap: 1rem;\n`;\nconst StatBlock = styled.div`\n    background: grey;\n    font-size: 2rem;\n    background: #f2f2f2;\n    border-radius: 2rem;\n    display: grid;\n    align-items: center;\n    justify-items: center;\n    text-align: center;\n`;\nexport default function Stats({\n  url\n}) {\n  const {\n    stats,\n    loading,\n    error\n  } = useStats(url);\n  const myRef = useRef(null); // console.log(url, stats);\n\n  if (loading) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Loading...\");\n  if (error) return __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"Error...\");\n  useEffect(() => {\n    let accessToRef = d3.select(myRef.current);\n    accessToRef.style(\"background-color\", \"red\");\n  }, []);\n  const viewStats = stats ? // <StatGrid>\n  //     <StatBlock>\n  //         <h3>Confirmed: </h3>\n  //         <span>\n  //             {stats.confirmed ? stats.confirmed.value : \"Not Found Yet\"}\n  //         </span>\n  //     </StatBlock>\n  //     <StatBlock>\n  //         <h3>Deaths: </h3>\n  //         <span>\n  //             {stats.deaths ? stats.deaths.value : \"Not Found Yet\"}\n  //         </span>\n  //     </StatBlock>\n  //     <StatBlock>\n  //         <h3>Recovered: </h3>\n  //         <span>\n  //             {stats.recovered ? stats.recovered.value : \"Not Found Yet\"}\n  //         </span>\n  //     </StatBlock>\n  // </StatGrid>\n  __jsx(\"div\", {\n    ref: myRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Confirmed: \"), __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, stats.confirmed ? stats.confirmed.value : \"Not Found Yet\")), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"Deaths: \"), __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, stats.deaths ? stats.deaths.value : \"Not Found Yet\")), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"Recovered: \"), __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, stats.recovered ? stats.recovered.value : \"Not Found Yet\"))) : null;\n  return viewStats;\n}","map":{"version":3,"sources":["/home/nazmul/WebProjects/coronaAPI-react/components/Stats.js"],"names":["React","useEffect","useState","useRef","useStats","styled","d3","StatGrid","div","StatBlock","Stats","url","stats","loading","error","myRef","accessToRef","select","current","style","viewStats","confirmed","value","deaths","recovered"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;AAEA,MAAMC,QAAQ,GAAGF,MAAM,CAACG,GAAI;;;;CAA5B;AAMA,MAAMC,SAAS,GAAGJ,MAAM,CAACG,GAAI;;;;;;;;;CAA7B;AAWA,eAAe,SAASE,KAAT,CAAe;AAAEC,EAAAA;AAAF,CAAf,EAAwB;AACnC,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,OAAT;AAAkBC,IAAAA;AAAlB,MAA4BV,QAAQ,CAACO,GAAD,CAA1C;AACA,QAAMI,KAAK,GAAGZ,MAAM,CAAC,IAAD,CAApB,CAFmC,CAGnC;;AAEA,MAAIU,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAIC,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AAEXb,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIe,WAAW,GAAGV,EAAE,CAACW,MAAH,CAAUF,KAAK,CAACG,OAAhB,CAAlB;AACAF,IAAAA,WAAW,CAACG,KAAZ,CAAkB,kBAAlB,EAAsC,KAAtC;AACH,GAHQ,EAGN,EAHM,CAAT;AAKA,QAAMC,SAAS,GAAGR,KAAK,GACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAK,IAAA,GAAG,EAAEG,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKH,KAAK,CAACS,SAAN,GAAkBT,KAAK,CAACS,SAAN,CAAgBC,KAAlC,GAA0C,eAD/C,CAFJ,CADJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKV,KAAK,CAACW,MAAN,GAAeX,KAAK,CAACW,MAAN,CAAaD,KAA5B,GAAoC,eADzC,CAFJ,CAPJ,EAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKV,KAAK,CAACY,SAAN,GAAkBZ,KAAK,CAACY,SAAN,CAAgBF,KAAlC,GAA0C,eAD/C,CAFJ,CAbJ,CArBmB,GAyCnB,IAzCJ;AA2CA,SAAOF,SAAP;AACH","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport useStats from \"../utils/useStats\";\nimport styled from \"styled-components\";\nimport * as d3 from \"d3\";\n\nconst StatGrid = styled.div`\n    display: grid;\n    grid-template-columns: repeat(3, 1fr);\n    grid-gap: 1rem;\n`;\n\nconst StatBlock = styled.div`\n    background: grey;\n    font-size: 2rem;\n    background: #f2f2f2;\n    border-radius: 2rem;\n    display: grid;\n    align-items: center;\n    justify-items: center;\n    text-align: center;\n`;\n\nexport default function Stats({ url }) {\n    const { stats, loading, error } = useStats(url);\n    const myRef = useRef(null);\n    // console.log(url, stats);\n\n    if (loading) return <p>Loading...</p>;\n    if (error) return <p>Error...</p>;\n\n    useEffect(() => {\n        let accessToRef = d3.select(myRef.current);\n        accessToRef.style(\"background-color\", \"red\");\n    }, []);\n\n    const viewStats = stats ? (\n        // <StatGrid>\n        //     <StatBlock>\n        //         <h3>Confirmed: </h3>\n        //         <span>\n        //             {stats.confirmed ? stats.confirmed.value : \"Not Found Yet\"}\n        //         </span>\n        //     </StatBlock>\n        //     <StatBlock>\n        //         <h3>Deaths: </h3>\n        //         <span>\n        //             {stats.deaths ? stats.deaths.value : \"Not Found Yet\"}\n        //         </span>\n        //     </StatBlock>\n        //     <StatBlock>\n        //         <h3>Recovered: </h3>\n        //         <span>\n        //             {stats.recovered ? stats.recovered.value : \"Not Found Yet\"}\n        //         </span>\n        //     </StatBlock>\n        // </StatGrid>\n        <div ref={myRef}>\n            <div>\n                <h3>Confirmed: </h3>\n                <span>\n                    {stats.confirmed ? stats.confirmed.value : \"Not Found Yet\"}\n                </span>\n            </div>\n            <div>\n                <h3>Deaths: </h3>\n                <span>\n                    {stats.deaths ? stats.deaths.value : \"Not Found Yet\"}\n                </span>\n            </div>\n            <div>\n                <h3>Recovered: </h3>\n                <span>\n                    {stats.recovered ? stats.recovered.value : \"Not Found Yet\"}\n                </span>\n            </div>\n        </div>\n    ) : null;\n\n    return viewStats;\n}\n"]},"metadata":{},"sourceType":"module"}